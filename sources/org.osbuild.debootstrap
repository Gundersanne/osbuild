#!/usr/bin/python3
"""
Run debootstrap

"""

import os
import shutil
import subprocess
import sys
import tempfile

from osbuild import sources
from osbuild.util.checksum import verify_file


SCHEMA = """
"definitions": {
  "item": {
    "description": "Inline data indexed by their checksum",
    "type": "object",
    "additionalProperties": false,
    "patternProperties": {
      "(md5|sha1|sha256|sha384|sha512):[0-9a-f]{32,128}": {
        "type": "object",
        "additionalProperties": false,
        "required": ["suite"],
        "properties": {
          "suite": {
            "description": "The ascii encoded raw data",
            "type": "string"
          }
        }
      }
    }
  }
},
"additionalProperties": false,
"required": ["items"],
"properties": {
  "items": {"$ref": "#/definitions/item"}
}
"""


class DebootstrapSource(sources.SourceService):

    content_type = "org.osbuild.files"

    def fetch_one(self, checksum, desc):
        target = os.path.join(self.cache, checksum)
        with tempfile.TemporaryDirectory(dir=self.cache) as tmpdir:
            tb = os.path.join(tmpdir, "tarball.tar")
            debootstrap_dir = os.path.join(tmpdir, "debootstrap")
            subprocess.run([
                "debootstrap",
                "--variant=minbase",
                f"--make-tarball={tb}",
                desc["suite"],
                debootstrap_dir,
            ], cwd=tmpdir, check=True)
            if not verify_file(tb, checksum):
                raise RuntimeError(f"Checksum mismatch for {format(checksum)}")
            os.rename(tb, target)


def main():
    service = DebootstrapSource.from_args(sys.argv[1:])
    service.main()


if __name__ == '__main__':
    main()
